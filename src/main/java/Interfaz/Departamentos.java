/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import static Interfaz.Autenticación.Ma;
import static Interfaz.Cotización.departamentoDestino;
import static Interfaz.Cotización.departamentoOrigen;
import static Interfaz.Regiones.listaRegiones;
import Lógica.Departamento;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Departamentos extends javax.swing.JFrame {

    public static Municipios Mun;
    DefaultTableModel model = new DefaultTableModel();
    public static ArrayList<Departamento> listaDepartamentos = new ArrayList<>();
    public int filaSeleccionadaDepto;
    String listaCotización;

    public Departamentos() {
        initComponents();
        model.addColumn("Código Región");
        model.addColumn("Nombre Región");
        model.addColumn("Nombre Departamento");
        model.addColumn("Código Departamento");
        listadeDepartamentos.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        códigoRegiónDepartamento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombreRegiónDepartamento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nombreDepartamento = new javax.swing.JTextField();
        regmenuadmin = new javax.swing.JButton();
        irmunicipios = new javax.swing.JButton();
        agregarMunicipios = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadeDepartamentos = new javax.swing.JTable();
        editarMunicipios = new javax.swing.JButton();
        modificarMunicipios = new javax.swing.JButton();
        eliminarMunicipios = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        códigoDepartamento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Departamentos");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setText("MUNICIPIOS Y DEPARTAMENTOS");

        jLabel2.setText("Código de región:");

        jLabel3.setText("Región:");

        jLabel4.setText("Nombre del departamento:");

        regmenuadmin.setText("Regresar");
        regmenuadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regmenuadminActionPerformed(evt);
            }
        });

        irmunicipios.setText("Municipios");
        irmunicipios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irmunicipiosActionPerformed(evt);
            }
        });

        agregarMunicipios.setText("Agregar");
        agregarMunicipios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarMunicipiosActionPerformed(evt);
            }
        });

        listadeDepartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(listadeDepartamentos);

        editarMunicipios.setText("Editar");
        editarMunicipios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarMunicipiosActionPerformed(evt);
            }
        });

        modificarMunicipios.setText("Modificar");
        modificarMunicipios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarMunicipiosActionPerformed(evt);
            }
        });

        eliminarMunicipios.setText("Eliminar");
        eliminarMunicipios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMunicipiosActionPerformed(evt);
            }
        });

        jLabel5.setText("Código del departamento: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(códigoDepartamento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(códigoRegiónDepartamento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreRegiónDepartamento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreDepartamento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(irmunicipios, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(118, 118, 118)
                                .addComponent(agregarMunicipios, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(regmenuadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editarMunicipios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(modificarMunicipios, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(eliminarMunicipios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(editarMunicipios))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(códigoRegiónDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombreRegiónDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(modificarMunicipios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(eliminarMunicipios))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(códigoDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(agregarMunicipios)
                        .addComponent(regmenuadmin))
                    .addComponent(irmunicipios))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void irmunicipiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irmunicipiosActionPerformed
        //Botón para ir al menú de municipios.
        this.setVisible(false);
        if (Mun == null) {
            Mun = new Municipios();
        }
        Mun.setVisible(true);
        Mun.setLocationRelativeTo(null);
    }//GEN-LAST:event_irmunicipiosActionPerformed

    private void regmenuadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regmenuadminActionPerformed
        //Botón para regresar al menú Administrador.
        this.setVisible(false);
        if (Ma == null) {
            Ma = new MenúAdmin();
        }
        Ma.setVisible(true);
        Ma.setLocationRelativeTo(null);
    }//GEN-LAST:event_regmenuadminActionPerformed

    private void agregarMunicipiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarMunicipiosActionPerformed
        /*Validaciones para verificar que los datos ingresados en los TextFields sean correctos. */
        boolean encontrado = false;
        for (int i = 0; i < listaRegiones.size(); i++) {
            if (códigoRegiónDepartamento.getText().equals(listaRegiones.get(i).getAgcódigoRegión())) {
                encontrado = true;
                break;
            }
        }
        if (códigoRegiónDepartamento.getText().equals(Regiones.regionm) || códigoRegiónDepartamento.getText().equals(Regiones.regionnt) || códigoRegiónDepartamento.getText().equals(Regiones.regionno) || códigoRegiónDepartamento.getText().equals(Regiones.regionso) || códigoRegiónDepartamento.getText().equals(Regiones.regionsoc) || códigoRegiónDepartamento.getText().equals(Regiones.regionnoc)) {
            encontrado = true;
        }
        if (!encontrado) {
            JOptionPane.showMessageDialog(this, "Esta región no se encuentra disponible", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (nombreRegiónDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese el nombre de la región", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (nombreDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese el nombre del departamento", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (códigoDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese el código del departamento", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        /*Instanciando el objeto Departamento con un constructor de 3 elementos */
        Departamento depto = new Departamento(códigoRegiónDepartamento.getText(), nombreRegiónDepartamento.getText(), nombreDepartamento.getText(), códigoDepartamento.getText());
        /*Agregando los objetos a un ArrayList de tipo Departamento*/
        listaDepartamentos.add(depto);
        /*Agregando los datos a la tabla*/
        model.addRow(new Object[]{códigoRegiónDepartamento.getText(), nombreRegiónDepartamento.getText(), nombreDepartamento.getText(), códigoDepartamento.getText()});
        listadeDepartamentos.setModel(model);
        /*Mensaje para indicar que sí se agregó un departamento al ArrayList y a la tabla*/
        JOptionPane.showMessageDialog(this, "Departamento agregado correctamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);

        this.setVisible(true);
        /*Limpiando los TextFields para agregar otro departamento o para editar alguno*/
        códigoRegiónDepartamento.setText("");
        nombreRegiónDepartamento.setText("");
        nombreDepartamento.setText("");
        códigoDepartamento.setText("");
    }//GEN-LAST:event_agregarMunicipiosActionPerformed

    private void editarMunicipiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarMunicipiosActionPerformed
        /*Si no hay ninguna fila seleccionada, mostrará un mensaje de error*/
        if (listadeDepartamentos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            /*Si alguna fila fue seleccionada, procede a enviar los datos de la fila a los TextFields
            para poder editarlos.*/
            filaSeleccionadaDepto = listadeDepartamentos.getSelectedRow();
            códigoRegiónDepartamento.setText(listadeDepartamentos.getValueAt(listadeDepartamentos.getSelectedRow(), 0).toString());
            nombreRegiónDepartamento.setText(listadeDepartamentos.getValueAt(listadeDepartamentos.getSelectedRow(), 1).toString());
            nombreDepartamento.setText(listadeDepartamentos.getValueAt(listadeDepartamentos.getSelectedRow(), 2).toString());
            códigoDepartamento.setText(listadeDepartamentos.getValueAt(listadeDepartamentos.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_editarMunicipiosActionPerformed

    private void modificarMunicipiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarMunicipiosActionPerformed
        if (!códigoRegiónDepartamento.getText().equals("M") && !códigoRegiónDepartamento.getText().equals("NT") && !códigoRegiónDepartamento.getText().equals("NO") && !códigoRegiónDepartamento.getText().equals("SO") && !códigoRegiónDepartamento.getText().equals("SOC") && !códigoRegiónDepartamento.getText().equals("NOC")) {
            JOptionPane.showMessageDialog(this, "Esta región no se encuentra disponible", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (nombreRegiónDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la región", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (nombreDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el nombre del departamento", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (códigoDepartamento.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el código del departamento", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        /*Instancia del objeto Departamento, que manda a llamar el objeto de la fila seleccionada en la variable
        filaSeleccionadDepto*/
        Departamento deptoSeleccionado = listaDepartamentos.get(filaSeleccionadaDepto);
        //Colocar el nuevo Departamento modificado en la tabla y en el ArrayList.
        deptoSeleccionado.setCodRegDpto(códigoRegiónDepartamento.getText().trim());
        deptoSeleccionado.setNombreRegDpto(nombreRegiónDepartamento.getText().trim());
        deptoSeleccionado.setNombreDpto(nombreDepartamento.getText().trim());
        deptoSeleccionado.setCodDpto(códigoDepartamento.getText().trim());
        //Actualizar los datos en la tabla.
        listadeDepartamentos.setValueAt(códigoRegiónDepartamento.getText().trim(), filaSeleccionadaDepto, 0);
        listadeDepartamentos.setValueAt(nombreRegiónDepartamento.getText().trim(), filaSeleccionadaDepto, 1);
        listadeDepartamentos.setValueAt(nombreDepartamento.getText().trim(), filaSeleccionadaDepto, 2);
        listadeDepartamentos.setValueAt(códigoDepartamento.getText().trim(), filaSeleccionadaDepto, 3);
        JOptionPane.showMessageDialog(null, "Departamento modificado correctamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
        //Limpiando los TextFields.
        códigoRegiónDepartamento.setText("");
        nombreRegiónDepartamento.setText("");
        nombreDepartamento.setText("");
        códigoDepartamento.setText("");
    }//GEN-LAST:event_modificarMunicipiosActionPerformed

    private void eliminarMunicipiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMunicipiosActionPerformed
        //Obteniendo la fila seleccionada.
        int selectedRow = listadeDepartamentos.getSelectedRow();
        //Validando que la fila si haya sido seleccionado.
        if (selectedRow != -1) {
            //Obteniendo el objeto correspondiente al Arraylist dependiendo de la fila seleccionada.
            Departamento kiosco = listaDepartamentos.get(selectedRow);

            //Método para eliminar la fila seleccionada.
            listaDepartamentos.remove(kiosco);

            //Actualizando la tabla sin el objeto que se eliminó previamente.
            DefaultTableModel modelo = (DefaultTableModel) listadeDepartamentos.getModel();
            model.removeRow(selectedRow);

            JOptionPane.showMessageDialog(null, "Departamento eliminado correctamente", "Proceso Exitoso", JOptionPane.INFORMATION_MESSAGE);
            //Vaciando de nuevo los TextFields.
            códigoRegiónDepartamento.setText("");
            nombreRegiónDepartamento.setText("");
            nombreDepartamento.setText("");
        } else { //Si no se seleccionó ninguna fila mostrará un JOptionPane con el error.
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarMunicipiosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Departamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Departamentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarMunicipios;
    private javax.swing.JTextField códigoDepartamento;
    private javax.swing.JTextField códigoRegiónDepartamento;
    private javax.swing.JButton editarMunicipios;
    private javax.swing.JButton eliminarMunicipios;
    private javax.swing.JButton irmunicipios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listadeDepartamentos;
    private javax.swing.JButton modificarMunicipios;
    private javax.swing.JTextField nombreDepartamento;
    private javax.swing.JTextField nombreRegiónDepartamento;
    private javax.swing.JButton regmenuadmin;
    // End of variables declaration//GEN-END:variables
}
