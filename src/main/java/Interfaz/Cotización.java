package Interfaz;

import static Interfaz.Autenticación.Mu;
import static Interfaz.Departamentos.listaDepartamentos;
import static Interfaz.Municipios.listaMunicipios;
import static Interfaz.Regiones.listaRegiones;
import static Interfaz.RegistroFacturación.listaClientes;
import static Interfaz.RegistroTarjetas.listaTarjetas;
import Lógica.Envío;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;

public class Cotización extends javax.swing.JFrame {

    public static double totalEstándar = 0, totalEspecial = 0;
    DefaultTableModel model = new DefaultTableModel();
    public static int númeroFactura = 0;
    public static String nombreFactura, direcciónFactura, nitFactura;
    public String contenido, tipo, contenido2;
    public StringBuilder codigo;
    public int númeroDeFactura = 0;
    public int paqenviados = 0;
    public static int paqtotales;
    public static int ventaRealizada = 1;
    public static int ventaregionm = 0;
    public static int ventaregionnt = 0;
    public static int ventaregionno = 0;
    public static int ventaregionso = 0;
    public static int ventaregionsoc = 0;
    public static int ventaregionnoc = 0;
    public static int ventaregionag = 0;

    public static ArrayList<Envío> listaEnvios = new ArrayList<>();

    public Cotización() {
        initComponents();
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            departamentoOrigen.addItem(listaDepartamentos.get(i).getNombreDpto());
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            departamentoDestino.addItem(listaDepartamentos.get(i).getNombreDpto());
        }
        for (int i = 0; i < listaMunicipios.size(); i++) {
            municipioOrigen.addItem(listaMunicipios.get(i).getNombreMun());
        }
        for (int i = 0; i < listaMunicipios.size(); i++) {
            municipioDestino.addItem(listaMunicipios.get(i).getNombreMun());
        }
        for (int i = 0; i < listaClientes.size(); i++) {
            comboNombre.addItem(listaClientes.get(i).getNombreCompletoCliente());
        }
        for (int i = 0; i < listaClientes.size(); i++) {
            comboDirección.addItem(listaClientes.get(i).getDirecciónCliente());
        }
        for (int i = 0; i < listaClientes.size(); i++) {
            comboNit.addItem(listaClientes.get(i).getNITCliente());
        }
        model.addColumn("Número de tarjeta");
        model.addColumn("Nombre en la tarjeta");
        listadeTarjetas.setModel(model);
        for (int i = 0; i < listaTarjetas.size(); i++) {
            String numerodeTarjeta = listaTarjetas.get(i).getNúmerodeTarjeta();
            String numeroOfuscado = "************" + numerodeTarjeta.substring(14);
            model.addRow(new Object[]{numeroOfuscado, listaTarjetas.get(i).getNombredeTarjeta()});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        servEstándar = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        totalEST = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        servEspecial = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        totalESP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        departamentoOrigen = new javax.swing.JComboBox<>();
        municipioOrigen = new javax.swing.JComboBox<>();
        departamentoDestino = new javax.swing.JComboBox<>();
        municipioDestino = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        númeroDePaquetes = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        paqPequeño = new javax.swing.JRadioButton();
        paqMediano = new javax.swing.JRadioButton();
        paqGrande = new javax.swing.JRadioButton();
        cotizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        pagoEntrega = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        pagoTarjeta = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        comboNombre = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        servicioFinal = new javax.swing.JTextField();
        totalFinal = new javax.swing.JTextField();
        pagoCompleto = new javax.swing.JButton();
        descFactura = new javax.swing.JButton();
        descGuía = new javax.swing.JButton();
        regMenúUsuario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadeTarjetas = new javax.swing.JTable();
        comboDirección = new javax.swing.JComboBox<>();
        comboNit = new javax.swing.JComboBox<>();
        CSV = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        jLabel12.setText("jLabel12");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cotización");

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setToolTipText("");

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        servEstándar.setBackground(new java.awt.Color(153, 153, 153));
        servEstándar.setForeground(new java.awt.Color(0, 0, 0));
        servEstándar.setText("Servicio estándar");

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Total: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(servEstándar, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalEST, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(servEstándar)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totalEST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setForeground(new java.awt.Color(153, 153, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(175, 50));

        servEspecial.setBackground(new java.awt.Color(153, 153, 153));
        servEspecial.setForeground(new java.awt.Color(0, 0, 0));
        servEspecial.setText("Servicio especial");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Total:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(servEspecial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalESP, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(servEspecial)
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalESP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jLabel3.setText("Origen");

        jLabel4.setText("Destino");

        departamentoOrigen.setToolTipText("");
        departamentoOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoOrigenActionPerformed(evt);
            }
        });

        municipioOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                municipioOrigenActionPerformed(evt);
            }
        });

        departamentoDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoDestinoActionPerformed(evt);
            }
        });

        municipioDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                municipioDestinoActionPerformed(evt);
            }
        });

        jLabel5.setText("Ingrese el número de paquetes: ");

        jLabel6.setText("Tamaño de paquetes:");

        jPanel4.setBackground(java.awt.Color.orange);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );

        jPanel5.setBackground(java.awt.Color.orange);
        jPanel5.setPreferredSize(new java.awt.Dimension(53, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );

        jPanel6.setBackground(java.awt.Color.orange);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );

        paqPequeño.setText("Pequeño");

        paqMediano.setText("Mediano");

        paqGrande.setText("Grande");

        cotizar.setText("Cotizar");
        cotizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cotizarActionPerformed(evt);
            }
        });

        jLabel7.setText("Tipo de pago");

        pagoEntrega.setText("Pago contra entrega ");
        pagoEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagoEntregaActionPerformed(evt);
            }
        });

        jLabel8.setText("Costo adicional de Q 5.00");

        pagoTarjeta.setText("Pago con tarjeta");

        jLabel9.setText("Datos de Facturación: ");

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Servicio: ");

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Total:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalFinal)
                    .addComponent(servicioFinal, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(servicioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pagoCompleto.setText("Realizar pago y envíar");
        pagoCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagoCompletoActionPerformed(evt);
            }
        });

        descFactura.setText("Descargar factura");
        descFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descFacturaActionPerformed(evt);
            }
        });

        descGuía.setText("Descargar Guía");
        descGuía.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descGuíaActionPerformed(evt);
            }
        });

        regMenúUsuario.setText("Cancelar envío");
        regMenúUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regMenúUsuarioActionPerformed(evt);
            }
        });

        listadeTarjetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(listadeTarjetas);

        jLabel13.setText("CSV:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(194, 194, 194)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(departamentoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(departamentoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(municipioOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(municipioDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(númeroDePaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(paqPequeño, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(paqMediano)
                        .addGap(67, 67, 67)
                        .addComponent(paqGrande))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(cotizar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(pagoEntrega))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(pagoTarjeta))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(pagoCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(descFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(descGuía, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(regMenúUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(comboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CSV)
                            .addComponent(comboDirección, 0, 120, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addComponent(comboNit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(departamentoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departamentoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(municipioOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(municipioDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(númeroDePaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paqPequeño, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paqMediano, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paqGrande, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cotizar)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addGap(4, 4, 4)
                .addComponent(pagoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel8)
                .addGap(14, 14, 14)
                .addComponent(pagoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(21, 21, 21)
                .addComponent(jLabel9)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDirección, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(pagoCompleto)
                .addGap(16, 16, 16)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descFactura)
                    .addComponent(descGuía))
                .addGap(76, 76, 76)
                .addComponent(regMenúUsuario))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void departamentoOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoOrigenActionPerformed

    }//GEN-LAST:event_departamentoOrigenActionPerformed

    private void departamentoDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoDestinoActionPerformed

    }//GEN-LAST:event_departamentoDestinoActionPerformed

    private void municipioOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_municipioOrigenActionPerformed

    }//GEN-LAST:event_municipioOrigenActionPerformed

    private void municipioDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_municipioDestinoActionPerformed

    }//GEN-LAST:event_municipioDestinoActionPerformed

    private void regMenúUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regMenúUsuarioActionPerformed
        this.setVisible(false);
        if (Mu == null) {
            Mu = new MenúUsuario();
        }
        Mu.setVisible(true);
        Mu.setLocationRelativeTo(null);
    }//GEN-LAST:event_regMenúUsuarioActionPerformed

    private void cotizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cotizarActionPerformed

        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionm)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 35.00 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 25.00 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionm)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 35.00 * 11 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 25.00 * 11 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionm)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 35.00 * 51 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 25.00 * 51 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
        }

        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnt)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 68.50 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 45.55 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }

            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnt)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 68.50 * 11 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 45.55 * 11 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }

            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnt)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 68.50 * 51 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 45.55 * 51 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }

            }
        }

        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionno)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 58.68 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 35.48 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionno)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 58.68 * 11 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 35.48 * 11 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionno)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 58.68 * 51 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 35.48 * 51 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
        }

        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionso)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 38.68 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 32.48 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionso)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 38.68 * 11 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 32.48 * 11 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionso)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 38.68 * 51 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 32.48 * 51 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
        }

        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnoc)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 44.50 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 40 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnoc)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 44.50 * 11 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 40 * 11 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnoc)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 44.50 * 51 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 40 * 51 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
        }

        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionsoc)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 34.00 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 29.00 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionsoc)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 34.00 * 11 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 29.00 * 11 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionsoc)) {
                    int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                    totalEstándar = 34.00 * 51 * valornumérico;
                    totalEST.setText(String.valueOf(totalEstándar));
                    totalEspecial = 29.00 * 51 * valornumérico;
                    totalESP.setText(String.valueOf(totalEspecial));
                    break;
                }
            }
        }
        if (!listaDepartamentos.isEmpty()) {
            for (int i = 0; i < listaDepartamentos.size(); i++) {
                if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqPequeño.isSelected()) {
                    if (listaDepartamentos.get(i).getCodRegDpto().equals(listaRegiones.get(i).getAgcódigoRegión())) {
                        int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                        Double precioEstándar = Double.parseDouble(listaRegiones.get(i).getAgprecioEstándar());
                        Double precioEspecial = Double.parseDouble(listaRegiones.get(i).getAgPrecioEspecial());
                        totalEstándar = precioEstándar * valornumérico;
                        totalEST.setText(String.valueOf(totalEstándar));
                        totalEspecial = precioEspecial * valornumérico;
                        totalESP.setText(String.valueOf(totalEspecial));
                        break;
                    }
                }
                if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqMediano.isSelected()) {
                    if (listaDepartamentos.get(i).getCodRegDpto().equals(listaRegiones.get(i).getAgcódigoRegión())) {
                        int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                        Double precioEstándar = Double.parseDouble(listaRegiones.get(i).getAgprecioEstándar());
                        Double precioEspecial = Double.parseDouble(listaRegiones.get(i).getAgPrecioEspecial());
                        totalEstándar = precioEstándar * 11 * valornumérico;
                        totalEST.setText(String.valueOf(totalEstándar));
                        totalEspecial = precioEspecial * 11 * valornumérico;
                        totalESP.setText(String.valueOf(totalEspecial));
                        break;
                    }
                }
                if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto()) && paqGrande.isSelected()) {
                    if (listaDepartamentos.get(i).getCodRegDpto().equals(listaRegiones.get(i).getAgcódigoRegión())) {
                        int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
                        Double precioEstándar = Double.parseDouble(listaRegiones.get(i).getAgprecioEstándar());
                        Double precioEspecial = Double.parseDouble(listaRegiones.get(i).getAgPrecioEspecial());
                        totalEstándar = precioEstándar * 51 * valornumérico;
                        totalEST.setText(String.valueOf(totalEstándar));
                        totalEspecial = precioEspecial * 51 * valornumérico;
                        totalESP.setText(String.valueOf(totalEspecial));
                        break;
                    }
                }
            }
        }

    }//GEN-LAST:event_cotizarActionPerformed

    private void pagoEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagoEntregaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagoEntregaActionPerformed

    private void pagoCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagoCompletoActionPerformed

        númeroDeFactura++;
        if (servEstándar.isSelected() && pagoEntrega.isSelected()) {
            Double totalEstándarPagoEntrega = totalEstándar + 5;
            totalFinal.setText(String.valueOf(totalEstándarPagoEntrega));
            servicioFinal.setText("Estándar");
            tipo = "Efectivo";
        }
        if (servEspecial.isSelected() && pagoEntrega.isSelected()) {
            Double totalEspecialPagoEntrega = totalEspecial + 5;
            totalFinal.setText(String.valueOf(totalEspecialPagoEntrega));
            servicioFinal.setText("Especial");
            tipo = "Efectivo";
        }
        if (servEstándar.isSelected() && pagoTarjeta.isSelected()) {
            totalFinal.setText(String.valueOf(totalEstándar));
            servicioFinal.setText("Estándar");
            tipo = "Tarjeta";
            if (CSV.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Debe agregar los 3 números del lado trasero de su tarjeta", "Error", JOptionPane.ERROR_MESSAGE);
                this.setVisible(true);
                return;
            }
        }
        if (servEspecial.isSelected() && pagoTarjeta.isSelected()) {
            totalFinal.setText(String.valueOf(totalEspecial));
            servicioFinal.setText("Estándar");
            tipo = "Tarjeta";
            if (CSV.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Debe agregar los 3 números del lado trasero de su tarjeta", "Error", JOptionPane.ERROR_MESSAGE);
                this.setVisible(true);
                return;
            }
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto())) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionm)) {
                    ventaregionm++;
                    break;
                }
            }
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto())) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnt)) {
                    ventaregionnt++;
                    break;
                }
            }
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto())) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionno)) {
                    ventaregionno++;
                    break;
                }
            }
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto())) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionso)) {
                    ventaregionso++;
                    break;
                }
            }
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto())) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionnoc)) {
                    ventaregionnoc++;
                    break;
                }
            }
        }
        for (int i = 0; i < listaDepartamentos.size(); i++) {
            if (departamentoDestino.getSelectedItem().toString().equals(listaDepartamentos.get(i).getNombreDpto())) {
                if (listaDepartamentos.get(i).getCodRegDpto().equals(Regiones.regionsoc)) {
                    ventaregionsoc++;
                    break;
                }
            }
        }
        codigo = new StringBuilder("IPC1F");
        String caracteresPermitidos = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
        int longitudCodigo = 5;
        Random random = new Random();
        for (int i = 0; i < longitudCodigo; i++) {
            int indice = random.nextInt(caracteresPermitidos.length());
            codigo.append(caracteresPermitidos.charAt(indice));
        }
        Envío Env = new Envío(codigo.toString(), servicioFinal.getText(), departamentoDestino.getSelectedItem().toString(), totalFinal.getText(), tipo);
        listaEnvios.add(Env);
        nombreFactura = comboNombre.getSelectedItem().toString();
        direcciónFactura = comboDirección.getSelectedItem().toString();
        nitFactura = comboNit.getSelectedItem().toString();
        int valornumérico = Integer.parseInt(númeroDePaquetes.getText());
        paqtotales = valornumérico + paqtotales;
        JOptionPane.showMessageDialog(this, "Pago realizado", "Proceso Exitoso", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(true);
        CSV.setText("");
    }//GEN-LAST:event_pagoCompletoActionPerformed

    private void descFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descFacturaActionPerformed
        if (servEstándar.isSelected() && pagoEntrega.isSelected()) {
            tipo = "Efectivo";
        }
        if (servEspecial.isSelected() && pagoEntrega.isSelected()) {
            tipo = "Efectivo";
        }
        if (servEstándar.isSelected() && pagoTarjeta.isSelected()) {
            tipo = "Tarjeta";
        }
        if (servEspecial.isSelected() && pagoTarjeta.isSelected()) {
            tipo = "Tarjeta";
        }
        String nombreArchivo = "Factura_" + new Date().getTime() + ".html";
        if (paqPequeño.isSelected()) {
            contenido = "<html>\n"
                    + "<head>\n"
                    + "<title>Factura</title>\n"
                    + "<style>\n"
                    + "table {\n"
                    + "  border-collapse: collapse;\n"
                    + "  width: 100%;\n"
                    + "}\n"
                    + "th, td {\n"
                    + "  text-align: left;\n"
                    + "  padding: 8px;\n"
                    + "  border-bottom: 1px solid #ddd;\n"
                    + "}\n"
                    + "th {\n"
                    + "  background-color: #4CAF50;\n"
                    + "  color: white;\n"
                    + "}\n"
                    + "</style>\n"
                    + "<style>\n"
                    + "body, h1, h2, h3, h4, h5, h6 {\n"
                    + "  font-size: 16px;\n"
                    + "  font-family: Arial, sans-serif;\n"
                    + "}\n"
                    + ".text-box {\n"
                    + "  border: 4px solid black;\n"
                    + "  padding: 10px;\n"
                    + "}\n"
                    + "</style>\n"
                    + "</head>\n"
                    + "<body>\n"
                    + "<div class=\"text-box\">\n"
                    + "<h1>" + "Factura número: " + númeroDeFactura + "</h1>\n"
                    + "<h1>" + codigo.toString() + "</h1>\n"
                    + "<h1>" + "Nombre: " + nombreFactura + "</h1>\n"
                    + "<h1>" + "Dirección: " + direcciónFactura + "</h1>\n"
                    + "<h1>" + "NIT: " + nitFactura + "</h1>\n"
                    + "<h1>" + "Tipo de Pago: " + tipo + "</h1>\n"
                    + "<h1>" + "Origen: " + departamentoOrigen.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Destino: " + departamentoDestino.getSelectedItem().toString() + "</h1>\n"
                    + "</div>\n"
                    + "<br>"
                    + "<table>\n"
                    + "<thead>\n"
                    + "<tr>\n"
                    + "<th>Número de paquetes</th>\n"
                    + "<th>Tamaño del paquete</th>\n"
                    + "<th>Total de pago</th>\n"
                    + "</tr>\n"
                    + "</thead>\n"
                    + "<tbody>\n"
                    + "<tr>\n"
                    + "<td>" + númeroDePaquetes.getText() + "</td>\n"
                    + "<td>" + "Pequeño" + " </td>\n"
                    + "<td>" + totalFinal.getText() + "</td>\n"
                    + "</tr>\n"
                    + "</tbody>\n"
                    + "</table>\n"
                    + "</body>\n"
                    + "</html>";
        }
        if (paqMediano.isSelected()) {
            contenido = "<html>\n"
                    + "<head>\n"
                    + "<title>Factura</title>\n"
                    + "<style>\n"
                    + "table {\n"
                    + "  border-collapse: collapse;\n"
                    + "  width: 100%;\n"
                    + "}\n"
                    + "th, td {\n"
                    + "  text-align: left;\n"
                    + "  padding: 8px;\n"
                    + "  border-bottom: 1px solid #ddd;\n"
                    + "}\n"
                    + "th {\n"
                    + "  background-color: #4CAF50;\n"
                    + "  color: white;\n"
                    + "}\n"
                    + "</style>\n"
                    + "<style>\n"
                    + "body, h1, h2, h3, h4, h5, h6 {\n"
                    + "  font-size: 16px;\n"
                    + "  font-family: Arial, sans-serif;\n"
                    + "}\n"
                    + ".text-box {\n"
                    + "  border: 4px solid black;\n"
                    + "  padding: 10px;\n"
                    + "}\n"
                    + "</style>\n"
                    + "</head>\n"
                    + "<body>\n"
                    + "<div class=\"text-box\">\n"
                    + "<h1>" + "Factura número: " + númeroDeFactura + "</h1>\n"
                    + "<h1>" + codigo.toString() + "</h1>\n"
                    + "<h1>" + "Nombre: " + nombreFactura + "</h1>\n"
                    + "<h1>" + "Dirección: " + direcciónFactura + "</h1>\n"
                    + "<h1>" + "NIT: " + nitFactura + "</h1>\n"
                    + "<h1>" + "Tipo de Pago: " + tipo + "</h1>\n"
                    + "<h1>" + "Origen: " + departamentoOrigen.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Destino: " + departamentoDestino.getSelectedItem().toString() + "</h1>\n"
                    + "</div>\n"
                    + "<br>"
                    + "<table>\n"
                    + "<thead>\n"
                    + "<tr>\n"
                    + "<th>Número de paquetes</th>\n"
                    + "<th>Tamaño del paquete</th>\n"
                    + "<th>Total de pago</th>\n"
                    + "</tr>\n"
                    + "</thead>\n"
                    + "<tbody>\n"
                    + "<tr>\n"
                    + "<td>" + númeroDePaquetes.getText() + "</td>\n"
                    + "<td>" + "Mediano" + " </td>\n"
                    + "<td>" + totalFinal.getText() + "</td>\n"
                    + "</tr>\n"
                    + "</tbody>\n"
                    + "</table>\n"
                    + "</body>\n"
                    + "</html>";
        }
        if (paqGrande.isSelected()) {
            contenido = "<html>\n"
                    + "<head>\n"
                    + "<title>Factura</title>\n"
                    + "<style>\n"
                    + "table {\n"
                    + "  border-collapse: collapse;\n"
                    + "  width: 100%;\n"
                    + "}\n"
                    + "th, td {\n"
                    + "  text-align: left;\n"
                    + "  padding: 8px;\n"
                    + "  border-bottom: 1px solid #ddd;\n"
                    + "}\n"
                    + "th {\n"
                    + "  background-color: #4CAF50;\n"
                    + "  color: white;\n"
                    + "}\n"
                    + "</style>\n"
                    + "<style>\n"
                    + "body, h1, h2, h3, h4, h5, h6 {\n"
                    + "  font-size: 16px;\n"
                    + "  font-family: Arial, sans-serif;\n"
                    + "}\n"
                    + ".text-box {\n"
                    + "  border: 4px solid black;\n"
                    + "  padding: 10px;\n"
                    + "}\n"
                    + "</style>\n"
                    + "</head>\n"
                    + "<body>\n"
                    + "<div class=\"text-box\">\n"
                    + "<h1>" + "Factura número: " + númeroDeFactura + "</h1>\n"
                    + "<h1>" + codigo.toString() + "</h1>\n"
                    + "<h1>" + "Nombre: " + nombreFactura + "</h1>\n"
                    + "<h1>" + "Dirección: " + direcciónFactura + "</h1>\n"
                    + "<h1>" + "NIT: " + nitFactura + "</h1>\n"
                    + "<h1>" + "Tipo de Pago: " + tipo + "</h1>\n"
                    + "<h1>" + "Origen: " + departamentoOrigen.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Destino: " + departamentoDestino.getSelectedItem().toString() + "</h1>\n"
                    + "</div>\n"
                    + "<br>"
                    + "<table>\n"
                    + "<thead>\n"
                    + "<tr>\n"
                    + "<th>Número de paquetes</th>\n"
                    + "<th>Tamaño del paquete</th>\n"
                    + "<th>Total de pago</th>\n"
                    + "</tr>\n"
                    + "</thead>\n"
                    + "<tbody>\n"
                    + "<tr>\n"
                    + "<td>" + númeroDePaquetes.getText() + "</td>\n"
                    + "<td>" + "Grande" + " </td>\n"
                    + "<td>" + totalFinal.getText() + "</td>\n"
                    + "</tr>\n"
                    + "</tbody>\n"
                    + "</table>\n"
                    + "</body>\n"
                    + "</html>";
        }
        try {
            FileWriter archivo = new FileWriter(nombreArchivo);
            archivo.write(contenido);
            archivo.close();
            System.out.println("Se generó correctamente la facutra");
        } catch (IOException e) {
            System.out.println("Ha ocurrido un error el general el archivo HTML" + e.getMessage());
        }
        JOptionPane.showMessageDialog(this, "Factura descargada", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(true);
    }//GEN-LAST:event_descFacturaActionPerformed

    private void descGuíaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descGuíaActionPerformed
        String nombreArchivo2 = "Guía_" + new Date().getTime() + ".html";
        Date fechaactual = new Date();
        if (servEstándar.isSelected() && pagoEntrega.isSelected()) {
            tipo = "Efectivo";
        }
        if (servEspecial.isSelected() && pagoEntrega.isSelected()) {
            tipo = "Efectivo";
        }
        if (servEstándar.isSelected() && pagoTarjeta.isSelected()) {
            tipo = "Tarjeta";
        }
        if (servEspecial.isSelected() && pagoTarjeta.isSelected()) {
            tipo = "Tarjeta";
        }
        if (paqPequeño.isSelected()) {
            contenido2 = "<html>\n"
                    + "<head>\n"
                    + "<title>Guía</title>\n"
                    + "<style>\n"
                    + "  body {\n"
                    + "    font-family: Arial, sans-serif;\n"
                    + "    font-size: 8px;\n"
                    + "  }\n"
                    + "</style>\n"
                    + "</head>\n"
                    + "<body>\n"
                    + "<div style=\"border: 2px solid black; padding: 10px; font-size: 16px;\">\n"
                    + "<h1>" + codigo.toString() + "</h1>\n"
                    + "<h1>" + "Origen: " + departamentoOrigen.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Destino: " + departamentoDestino.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Tipo de pago: " + tipo + "</h1>\n"
                    + "<h1>" + "Tamaño del paquete:" + "Pequeño" + "</h1>\n"
                    + "<h1>" + "Número de paquetes: " + númeroDePaquetes.getText() + "</h1>\n"
                    + "<h1>" + "Fecha de envío: " + fechaactual + "</h1>\n"
                    + "<h1>" + "Total a pagar: " + totalFinal.getText() + "</h1>\n"
                    + "</div>\n"
                    + "<div>"
                    + "<img src=\"EAN13.svg\" alt=\"Código de barras\">\n"
                    + "</div>"
                    + "</body>\n"
                    + "</html>";
        }
        if (paqMediano.isSelected()) {
            contenido2 = "<html>\n"
                    + "<head>\n"
                    + "<title>Guía</title>\n"
                    + "<style>\n"
                    + "  body {\n"
                    + "    font-family: Arial, sans-serif;\n"
                    + "    font-size: 8px;\n"
                    + "  }\n"
                    + "</style>\n"
                    + "</head>\n"
                    + "<body>\n"
                    + "<div style=\"border: 2px solid black; padding: 10px; font-size: 16px;\">\n"
                    + "<h1>" + codigo.toString() + "</h1>\n"
                    + "<h1>" + "Origen: " + departamentoOrigen.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Destino: " + departamentoDestino.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Tipo de pago: " + tipo + "</h1>\n"
                    + "<h1>" + "Tamaño del paquete:" + "Mediano" + "</h1>\n"
                    + "<h1>" + "Número de paquetes: " + númeroDePaquetes.getText() + "</h1>\n"
                    + "<h1>" + "Fecha de envío: " + fechaactual + "</h1>\n"
                    + "<h1>" + "Total a pagar: " + totalFinal.getText() + "</h1>\n"
                    + "</div>\n"
                    + "<div>"
                    + "<img src=\"EAN13.svg\" alt=\"Código de barras\">\n"
                    + "</div>"
                    + "</body>\n"
                    + "</html>";
        }
        if (paqGrande.isSelected()) {
            contenido2 = "<html>\n"
                    + "<head>\n"
                    + "<title>Guía</title>\n"
                    + "<style>\n"
                    + "  body {\n"
                    + "    font-family: Arial, sans-serif;\n"
                    + "    font-size: 8px;\n"
                    + "  }\n"
                    + "</style>\n"
                    + "</head>\n"
                    + "<body>\n"
                    + "<div style=\"border: 2px solid black; padding: 10px; font-size: 16px;\">\n"
                    + "<h1>" + codigo.toString() + "</h1>\n"
                    + "<h1>" + "Origen: " + departamentoOrigen.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Destino: " + departamentoDestino.getSelectedItem().toString() + "</h1>\n"
                    + "<h1>" + "Tipo de pago: " + tipo + "</h1>\n"
                    + "<h1>" + "Tamaño del paquete: " + "Grande" + "</h1>\n"
                    + "<h1>" + "Número de paquetes: " + númeroDePaquetes.getText() + "</h1>\n"
                    + "<h1>" + "Fecha de envío: " + fechaactual + "</h1>\n"
                    + "<h1>" + "Total a pagar: " + totalFinal.getText() + "</h1>\n"
                    + "</div>\n"
                    + "<div>"
                    + "<img src=\"EAN13.svg\" alt=\"Código de barras\">\n"
                    + "</div>"
                    + "</body>\n"
                    + "</html>";
        }
        try {
            FileWriter archivo2 = new FileWriter(nombreArchivo2);
            archivo2.write(contenido2);
            archivo2.close();
            System.out.println("Se generó correctamente la Guía");
        } catch (IOException e) {
            System.out.println("Ha ocurrido un error el general el archivo HTML" + e.getMessage());
        }
        JOptionPane.showMessageDialog(this, "Guía descargada", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(true);
    }//GEN-LAST:event_descGuíaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cotización.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cotización.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cotización.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cotización.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cotización().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CSV;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> comboDirección;
    private javax.swing.JComboBox<String> comboNit;
    private javax.swing.JComboBox<String> comboNombre;
    private javax.swing.JButton cotizar;
    public static javax.swing.JComboBox<String> departamentoDestino;
    public static javax.swing.JComboBox<String> departamentoOrigen;
    private javax.swing.JButton descFactura;
    private javax.swing.JButton descGuía;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable listadeTarjetas;
    public static javax.swing.JComboBox<String> municipioDestino;
    public static javax.swing.JComboBox<String> municipioOrigen;
    private javax.swing.JTextField númeroDePaquetes;
    public javax.swing.JButton pagoCompleto;
    private javax.swing.JRadioButton pagoEntrega;
    private javax.swing.JRadioButton pagoTarjeta;
    private javax.swing.JRadioButton paqGrande;
    private javax.swing.JRadioButton paqMediano;
    private javax.swing.JRadioButton paqPequeño;
    private javax.swing.JButton regMenúUsuario;
    private javax.swing.JRadioButton servEspecial;
    private javax.swing.JRadioButton servEstándar;
    private javax.swing.JTextField servicioFinal;
    private javax.swing.JTextField totalESP;
    private javax.swing.JTextField totalEST;
    private javax.swing.JTextField totalFinal;
    // End of variables declaration//GEN-END:variables
}
