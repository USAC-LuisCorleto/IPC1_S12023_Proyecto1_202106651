package Interfaz;

import static Interfaz.Autenticación.Ma;
import static Interfaz.Cotización.ventaRealizada;
import Lógica.Usuario;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class RegistroUsuario extends javax.swing.JFrame {

    public static Autenticación At;

    //Array dinámico de tipo "Objeto Usuario"
    public static ArrayList<Usuario> listaUsuarios = new ArrayList<>();
    private Usuario usuarioSeleccionado;

    public RegistroUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        correoe = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        contra = new javax.swing.JTextField();
        reincontra = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dpi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rol = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        fechanac = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        genero = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        apodo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tel = new javax.swing.JTextField();
        registrar = new javax.swing.JButton();
        regresaraut = new javax.swing.JButton();
        nacionalidad = new javax.swing.JComboBox<>();
        usuariosRegistrados = new javax.swing.JComboBox<>();
        mostrarUsuario = new javax.swing.JButton();
        modificarUsuario = new javax.swing.JButton();
        eliminarUsuario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de usuarios");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setText("REGISTRO DE USUARIO");

        jLabel2.setText("Correo electrónico:");

        jLabel3.setText("Contraseña:");

        jLabel4.setText("Reingresar contraseña:");

        jLabel5.setText("DPI: ");

        dpi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpiActionPerformed(evt);
            }
        });

        jLabel6.setText("Rol");

        rol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario individual", "Usuario empresarial", "Kiosco" }));
        rol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rol.setCursor(new java.awt.Cursor(java.awt.Cursor.SE_RESIZE_CURSOR));
        rol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolActionPerformed(evt);
            }
        });

        jLabel7.setText("Fecha de nacimiento:");

        fechanac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechanacActionPerformed(evt);
            }
        });
        fechanac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fechanacKeyTyped(evt);
            }
        });

        jLabel8.setText("Género:");

        genero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));
        genero.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Nacionalidad: ");

        jLabel10.setText("Sombrenombre:");

        jLabel11.setText("Teléfono:");

        tel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telKeyTyped(evt);
            }
        });

        registrar.setText("Registrar");
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });

        regresaraut.setText("Regresar");
        regresaraut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarautActionPerformed(evt);
            }
        });

        nacionalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Guatemala", "El Salvador", "Costa Rica", "Nicaragua", "Hondura", "Panamá" }));
        nacionalidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        mostrarUsuario.setText("Mostrar");
        mostrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarUsuarioActionPerformed(evt);
            }
        });

        modificarUsuario.setText("Modificar");
        modificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarUsuarioActionPerformed(evt);
            }
        });

        eliminarUsuario.setText("Eliminar");
        eliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(usuariosRegistrados, 0, 216, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mostrarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(modificarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(eliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(121, 121, 121)
                            .addComponent(regresaraut, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(correoe)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(contra, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(reincontra, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)))
                                .addComponent(dpi))
                            .addGap(55, 55, 55)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                .addComponent(fechanac)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(88, 88, 88)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(apodo)
                                .addComponent(tel, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                .addComponent(nacionalidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(274, 274, 274))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(correoe, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(nacionalidad)
                    .addComponent(fechanac))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(contra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reincontra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(apodo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regresaraut)
                    .addComponent(registrar)
                    .addComponent(usuariosRegistrados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarUsuario)
                    .addComponent(modificarUsuario)
                    .addComponent(eliminarUsuario))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regresarautActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarautActionPerformed
        //Botón para regresar al menúAdmin.
        this.setVisible(false);
        if (Ma == null) {
            Ma = new MenúAdmin();
        }
        Ma.setVisible(true);
        Ma.setLocationRelativeTo(null);
    }//GEN-LAST:event_regresarautActionPerformed

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        /*Verifica si el TexField en el que está siendo ingresada la contraseña
        no contiene los caracteres requeridos, mayúsculas, minúsculas, un número y
        por lo menos un caracter especial.
        Si cumple la condición muestra un mensaje de advertencia, avisando que
        se deben cumplir con ciertos requerimientos para que la contraseña sea validada.
        Éste mismo no guardará datos en el ArrayList hasta que la condición sea falsa*/
        if (!contra.getText().matches(".*[#%&@!].*")) {
            JOptionPane.showMessageDialog(this, "La contraseña debe contener al menos un carácter especial.", "Error", JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (!contra.getText().matches(".*[A-Z].*")) {
            JOptionPane.showMessageDialog(this, "La contraseña debe contener al menos una letra mayúscula.", "Error", JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (!contra.getText().matches(".*[0-9].*")) {
            JOptionPane.showMessageDialog(this, "La contraseña debe contener al menos un número.", "Error", JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (!contra.getText().matches(".*[a-z].*")) {
            JOptionPane.showMessageDialog(this, "La contraseña debe contener al menos una letra minúscula.", "Error", JOptionPane.WARNING_MESSAGE);
            this.setVisible(true);
            return;
        }
        /*Estas condiciones verifican que el TextField en donde se verifica la contraseña
        esté lleno y que la contraseña sea igual a la ingresada anteriormente.
        Si no se cumple la condición no será registrado el usuario en el sistema
        o sea que no guardarán los datos en el ArrayList, por eso el return;*/
        if (reincontra.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Confirme la contraseña", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (!contra.getText().equals(reincontra.getText())) {
            JOptionPane.showMessageDialog(this, "Las contraseñas no son iguales", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (dpi.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese su DPI en el campo correspondiente", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (fechanac.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese su fecha de nacimiento", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (apodo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese su nombre", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (tel.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese su número telefónico", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        /*Llenado del ArrayList dinámico, llamando a cada uno de los TextFields y almacenar su valor de tipo
        String, si las condiciones anteriores se cumplen, guarda los datos en el ArrayList.*/
        Usuario user = new Usuario(correoe.getText(), contra.getText(), dpi.getText(), apodo.getText(), fechanac.getText(), genero.getSelectedItem().toString(), nacionalidad.getSelectedItem().toString(), rol.getSelectedItem().toString(), tel.getText(), ventaRealizada);
        listaUsuarios.add(user);
        //Mensaje que indica que el usuario fue registrado correctamente.
        JOptionPane.showMessageDialog(this, "Usuario registrado correctamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(true);
        usuariosRegistrados.addItem(correoe.getText());
        //Deja en blanco todos los TextFields una vez se registró un usuario.
        correoe.setText("");
        contra.setText("");
        dpi.setText("");
        apodo.setText("");
        fechanac.setText("");
        tel.setText("");
        reincontra.setText("");
    }//GEN-LAST:event_registrarActionPerformed

    private void rolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolActionPerformed

    }//GEN-LAST:event_rolActionPerformed

    private void fechanacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechanacActionPerformed

    }//GEN-LAST:event_fechanacActionPerformed

    private void fechanacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechanacKeyTyped
        /*Si el TextField fechanac es mayor o igual
        a 10 caracteres, consuma o elimina los caracteres
        sobrantes al instante*/
        if (fechanac.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_fechanacKeyTyped

    private void telKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telKeyTyped
        /*Si el TextField tel es mayor o igual
        a 8 caracteres, consuma o elimina los caracteres
        sobrantes al instante*/
        if (tel.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_telKeyTyped

    private void dpiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dpiActionPerformed

    private void mostrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarUsuarioActionPerformed
       /*Mandando a llamar al objeto dentro del ArrayList que se seleccionó en el combobBox
        y mostrarlo en los campos que corresponden.*/
        for (int i = 0; i < listaUsuarios.size(); i++) {
            if (usuariosRegistrados.getSelectedItem().equals(listaUsuarios.get(i).getCorreo())) {
                correoe.setText(listaUsuarios.get(i).getCorreo());
                contra.setText(listaUsuarios.get(i).getContraseña());
                dpi.setText(listaUsuarios.get(i).getDPI());
                fechanac.setText(listaUsuarios.get(i).getNacimiento());
                apodo.setText(listaUsuarios.get(i).getNombre());
                tel.setText(listaUsuarios.get(i).getTeléfono());
                usuarioSeleccionado = listaUsuarios.get(i);
            }
        }

    }//GEN-LAST:event_mostrarUsuarioActionPerformed

    private void modificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarUsuarioActionPerformed

        int indiceSeleccionado = usuariosRegistrados.getSelectedIndex();
        Usuario usuarioAModificar = listaUsuarios.get(indiceSeleccionado);

        if (!contra.getText().matches(".*[#%&@!].*") || !contra.getText().matches(".*[A-Z].*") || !contra.getText().matches(".*[0-9].*") || !contra.getText().matches(".*[a-z].*")) {
            JOptionPane.showMessageDialog(this, "La contraseña debe contener al menos un carácter especial, una letra mayúscula, un número y una letra minúscula.", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (reincontra.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe confirmar la contraseña", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (!contra.getText().equals(reincontra.getText())) {
            JOptionPane.showMessageDialog(this, "Las contraseñas deben ser iguales", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (dpi.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar su DPI", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (fechanac.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar su Fecha de nacimiento", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (apodo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar su nombre", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        if (tel.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar su Teléfono", "Error", JOptionPane.ERROR_MESSAGE);
            this.setVisible(true);
            return;
        }
        /*Creando variables para almacenar la modificación en el ArrayList de objetos*/
        String correoEditado = correoe.getText();
        String contraEditada = contra.getText();
        String dpiEditado = dpi.getText();
        String fechanacEditada = fechanac.getText();
        String genEditado = genero.getSelectedItem().toString();
        String nacEditada = nacionalidad.getSelectedItem().toString();
        String apodoEditado = apodo.getText();
        String telEditado = tel.getText();
        
        /*Mostrando u JOptionPane de sí o no, si se selecciona el botón Sí, procede a realizar el código dentro de la condición,
        en este caso la modificación de algún campo del usuario.*/
        int resp = JOptionPane.showConfirmDialog(this, "¿Está seguro que quiere realizar estos cambios?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION) {
            /*Modificando los atributos del objeto mediante el método set correspondiente a cada atributo del objeto.*/
            usuarioSeleccionado.setCorreo(correoEditado);
            usuarioSeleccionado.setContraseña(contraEditada);
            usuarioSeleccionado.setDPI(dpiEditado);
            usuarioSeleccionado.setNacimiento(fechanacEditada);
            usuarioSeleccionado.setGenero(genEditado);
            usuarioSeleccionado.setNacion(nacEditada);
            usuarioSeleccionado.setNombre(apodoEditado);
            usuarioSeleccionado.setTeléfono(telEditado);

            listaUsuarios.set(indiceSeleccionado, usuarioAModificar);
            /*Colocando el correo modificado dentor del ComboBox.*/
            usuariosRegistrados.removeItemAt(indiceSeleccionado);
            usuariosRegistrados.insertItemAt(usuarioAModificar.getCorreo(), indiceSeleccionado);
            JOptionPane.showMessageDialog(this, "El usuario ha sido modificado exitosamente.");
        }
        //Limpiando los TextFields
        correoe.setText("");
        contra.setText("");
        dpi.setText("");
        fechanac.setText("");
        apodo.setText("");
        tel.setText("");
        reincontra.setText("");
    }//GEN-LAST:event_modificarUsuarioActionPerformed

    private void eliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarUsuarioActionPerformed
        /*Obtener el objeto dentro del ArrayList mediante el item del ComboBox seleccionado, utilizando el método
        remove para eliminar el objeto que se seleccionó.*/
        int indiceSeleccionado = usuariosRegistrados.getSelectedIndex();
        Usuario usuarioAEliminar = listaUsuarios.get(indiceSeleccionado);
        listaUsuarios.remove(usuarioAEliminar);
        usuariosRegistrados.removeItemAt(indiceSeleccionado);
        JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(true);
    }//GEN-LAST:event_eliminarUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apodo;
    private javax.swing.JTextField contra;
    private javax.swing.JTextField correoe;
    private javax.swing.JTextField dpi;
    private javax.swing.JButton eliminarUsuario;
    private javax.swing.JTextField fechanac;
    private javax.swing.JComboBox<String> genero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton modificarUsuario;
    private javax.swing.JButton mostrarUsuario;
    private javax.swing.JComboBox<String> nacionalidad;
    private javax.swing.JButton registrar;
    private javax.swing.JButton regresaraut;
    private javax.swing.JTextField reincontra;
    private javax.swing.JComboBox<String> rol;
    private javax.swing.JTextField tel;
    private javax.swing.JComboBox<String> usuariosRegistrados;
    // End of variables declaration//GEN-END:variables

}
